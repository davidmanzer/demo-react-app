"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var AcceptTermsPrompt = /*#__PURE__*/function (_React$Component) {
  _inherits(AcceptTermsPrompt, _React$Component);

  function AcceptTermsPrompt(props) {
    var _this;

    _classCallCheck(this, AcceptTermsPrompt);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(AcceptTermsPrompt).call(this, props));
    _this.handleScroll = _this.handleScroll.bind(_assertThisInitialized(_this));
    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));
    _this.handleAnswer = _this.handleAnswer.bind(_assertThisInitialized(_this));
    _this.state = {
      scrolledToBottom: false,
      yesSelected: false
    };
    return _this;
  }

  _createClass(AcceptTermsPrompt, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (!window.dataLayer) return;
      window.dataLayer.push({
        event: 'terms-shown'
      });
      window.scrollTo(0, 0);
    }
  }, {
    key: "handleSubmit",
    value: function handleSubmit() {
      this.props.onAccept(this.props.terms.name);
    }
  }, {
    key: "handleScroll",
    value: function handleScroll(event) {
      var ct = event.currentTarget;

      if (ct.scrollTop + ct.offsetHeight + 100 >= ct.scrollHeight) {
        this.setState({
          scrolledToBottom: true,
          yesSelected: this.state.yesSelected
        });
      }
    }
  }, {
    key: "handleAnswer",
    value: function handleAnswer(event) {
      if (event.currentTarget.value === 'yes' && event.currentTarget.checked) {
        this.setState({
          scrolledToBottom: this.state.scrolledToBottom,
          yesSelected: true
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      // loading state for terms content is handled by parent component
      var _this$props = this.props,
          terms = _this$props.terms,
          onCancel = _this$props.onCancel;

      if (!terms.termsContent) {
        return _react["default"].createElement("div", null);
      }

      var submitDisabled = !(this.state.scrolledToBottom && this.state.yesSelected);
      var submitClass = (0, _classnames["default"])({
        'usa-button': true,
        'usa-button-disabled': submitDisabled,
        'submit-button': true
      });

      var submitButton = _react["default"].createElement("button", {
        className: submitClass,
        disabled: submitDisabled,
        onClick: this.handleSubmit
      }, "Submit");

      var yesButton = _react["default"].createElement("div", null, _react["default"].createElement("input", {
        type: "checkbox",
        name: "form-selection",
        id: "form-yes",
        value: "yes",
        onChange: this.handleAnswer,
        disabled: !this.state.scrolledToBottom
      }), _react["default"].createElement("label", {
        htmlFor: "form-yes"
      }, terms.yesContent));

      var actionButtonClass = (0, _classnames["default"])({
        'form-radio-buttons': true,
        disabled: !this.state.scrolledToBottom
      });
      /* eslint-disable react/no-danger */

      /* eslint-disable jsx-a11y/no-noninteractive-tabindex */

      return _react["default"].createElement("div", {
        className: "row primary terms-acceptance"
      }, _react["default"].createElement("div", {
        className: "small-12 columns usa-content",
        role: "region",
        "aria-label": "Terms and Conditions",
        tabIndex: "0"
      }, _react["default"].createElement("div", {
        dangerouslySetInnerHTML: {
          __html: terms.headerContent
        }
      }), _react["default"].createElement("h1", null, terms.title), _react["default"].createElement("div", {
        className: "terms-box"
      }, _react["default"].createElement("div", {
        className: "terms-head"
      }, "Scroll to read the full terms and conditions to continue"), _react["default"].createElement("div", {
        className: "terms-scroller",
        onScroll: this.handleScroll,
        tabIndex: "0"
      }, _react["default"].createElement("div", {
        dangerouslySetInnerHTML: {
          __html: terms.termsContent
        }
      })), _react["default"].createElement("div", {
        className: actionButtonClass
      }, yesButton)), _react["default"].createElement("div", null, _react["default"].createElement("div", {
        dangerouslySetInnerHTML: {
          __html: terms.footerContent
        }
      })), _react["default"].createElement("div", null, submitButton, _react["default"].createElement("button", {
        className: "usa-button usa-button-secondary",
        onClick: onCancel
      }, "Cancel"))));
      /* eslint-enable jsx-a11y/no-noninteractive-tabindex */

      /* eslint-enable react/no-danger */
    }
  }]);

  return AcceptTermsPrompt;
}(_react["default"].Component);

var _default = AcceptTermsPrompt;
exports["default"] = _default;