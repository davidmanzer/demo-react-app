"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _range = _interopRequireDefault(require("lodash/range"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Pagination = /*#__PURE__*/function (_Component) {
  _inherits(Pagination, _Component);

  function Pagination() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, Pagination);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Pagination)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "onPageSelect", function (page, eventID) {
      // Propogate via the prop.
      _this.props.onPageSelect(page); // Conditionally track the event.


      if (_this.props.enableAnalytics) {
        _this.props.trackEvent({
          event: eventID,
          'paginate-page-number': page
        });
      }
    });

    _defineProperty(_assertThisInitialized(_this), "next", function () {
      var nextPage;

      if (_this.props.pages > _this.props.page) {
        nextPage = _react["default"].createElement("a", {
          "aria-label": "Load next page ".concat(_this.props.ariaLabelSuffix),
          onClick: function onClick() {
            _this.onPageSelect(_this.props.page + 1, 'nav-paginate-next');
          },
          onKeyDown: function onKeyDown(e) {
            return _this.handleKeyDown(e, _this.props.page + 1);
          },
          tabIndex: "0"
        }, "Next");
      }

      return nextPage;
    });

    _defineProperty(_assertThisInitialized(_this), "prev", function () {
      var prevPage;

      if (_this.props.page > 1) {
        prevPage = _react["default"].createElement("a", {
          "aria-label": "Load previous page ".concat(_this.props.ariaLabelSuffix),
          onClick: function onClick() {
            _this.onPageSelect(_this.props.page - 1, 'nav-paginate-previous');
          },
          onKeyDown: function onKeyDown(e) {
            return _this.handleKeyDown(e, _this.props.page - 1);
          },
          tabIndex: "0"
        }, _react["default"].createElement("abbr", {
          title: "Previous"
        }, "Prev"));
      }

      return prevPage;
    });

    _defineProperty(_assertThisInitialized(_this), "last", function () {
      var _this$props = _this.props,
          maxPageListLength = _this$props.maxPageListLength,
          currentPage = _this$props.page,
          totalPages = _this$props.pages,
          showLastPage = _this$props.showLastPage;
      var lastPage;

      if (showLastPage && currentPage < totalPages - maxPageListLength + 1) {
        lastPage = _react["default"].createElement("span", null, _react["default"].createElement("a", {
          "aria-label": "..."
        }, "..."), _react["default"].createElement("a", {
          "aria-label": "Load last page ".concat(_this.props.ariaLabelSuffix),
          onClick: function onClick() {
            _this.onPageSelect(totalPages, 'nav-paginate-number');
          }
        }, totalPages));
      }

      return lastPage;
    });

    _defineProperty(_assertThisInitialized(_this), "pageNumbers", function () {
      var _this$props2 = _this.props,
          maxPageListLength = _this$props2.maxPageListLength,
          currentPage = _this$props2.page,
          totalPages = _this$props2.pages,
          showLastPage = _this$props2.showLastPage; // Make space for "... (last page number)" if not in range of the last page.

      var showEllipsisAndLastPage = showLastPage && currentPage < totalPages - maxPageListLength + 1;
      var limit = showEllipsisAndLastPage ? maxPageListLength - 2 : maxPageListLength;
      var end;
      var start; // If there are more pages returned than the limit to show
      // cap the upper range at limit + the page number.

      if (totalPages > limit) {
        start = currentPage;
        end = limit + currentPage; // treat the last pages specially

        if (start >= totalPages - limit + 1) {
          start = totalPages - limit + 1;
          end = totalPages + 1;
        }
      } else {
        start = 1;
        end = totalPages + 1;
      }

      return (0, _range["default"])(start, end);
    });

    _defineProperty(_assertThisInitialized(_this), "handleKeyDown", function (e, pageNumber) {
      var keyCode = e.which || e.keyCode;

      if (keyCode === 13 || keyCode === 32) {
        e.preventDefault();

        _this.onPageSelect(pageNumber, 'nav-paginate-number');
      }
    });

    return _this;
  }

  _createClass(Pagination, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props3 = this.props,
          ariaLabelSuffix = _this$props3.ariaLabelSuffix,
          className = _this$props3.className,
          page = _this$props3.page,
          pages = _this$props3.pages; // Do not render if there's only 1 page.

      if (pages === 1) {
        return _react["default"].createElement("div", null);
      }

      var pageList = this.pageNumbers().map(function (pageNumber) {
        var pageClass = (0, _classnames["default"])({
          'va-pagination-active': page === pageNumber
        });
        return _react["default"].createElement("a", {
          key: pageNumber,
          className: pageClass,
          "aria-label": "Load page ".concat(pageNumber, " ").concat(ariaLabelSuffix),
          onClick: function onClick() {
            return _this2.onPageSelect(pageNumber, 'nav-paginate-number');
          },
          onKeyDown: function onKeyDown(e) {
            return _this2.handleKeyDown(e, pageNumber);
          },
          tabIndex: "0"
        }, pageNumber);
      });
      return _react["default"].createElement("div", {
        className: (0, _classnames["default"])(_defineProperty({
          'va-pagination': true
        }, className, className))
      }, _react["default"].createElement("span", {
        className: "va-pagination-prev"
      }, this.prev()), _react["default"].createElement("div", {
        className: "va-pagination-inner"
      }, pageList, " ", this.last()), _react["default"].createElement("span", {
        className: "va-pagination-next"
      }, this.next()));
    }
  }]);

  return Pagination;
}(_react.Component);

_defineProperty(Pagination, "defaultProps", {
  ariaLabelSuffix: '',
  enableAnalytics: true,
  maxPageListLength: 10,
  showLastPage: false,
  trackEvent: function trackEvent() {
    var _window$dataLayer;

    // Escape early if Google Analytics (GA) is not enabled.
    if (!window.dataLayer) {
      return;
    } // Track event in GA.


    (_window$dataLayer = window.dataLayer).push.apply(_window$dataLayer, arguments);
  }
});

var _default = Pagination;
exports["default"] = _default;