"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _uniqueId2 = _interopRequireDefault(require("lodash/uniqueId"));

var _react = _interopRequireDefault(require("react"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
 * A component for the continue button to navigate through panels of questions.
 */
var ProgressButton = /*#__PURE__*/function (_React$Component) {
  _inherits(ProgressButton, _React$Component);

  function ProgressButton() {
    _classCallCheck(this, ProgressButton);

    return _possibleConstructorReturn(this, _getPrototypeOf(ProgressButton).apply(this, arguments));
  }

  _createClass(ProgressButton, [{
    key: "UNSAFE_componentWillMount",
    value: function UNSAFE_componentWillMount() {
      this.id = (0, _uniqueId2["default"])();
    }
  }, {
    key: "render",
    value: function render() {
      var beforeText = this.props.beforeText ? _react["default"].createElement("span", {
        className: "button-icon"
      }, this.props.beforeText, " ") : '';
      var afterText = this.props.afterText ? _react["default"].createElement("span", {
        className: "button-icon"
      }, " ", this.props.afterText) : '';
      return _react["default"].createElement("button", {
        type: this.props.submitButton ? 'submit' : 'button',
        disabled: this.props.disabled,
        className: "".concat(this.props.buttonClass, " ").concat(this.props.disabled ? 'usa-button-disabled' : null),
        id: "".concat(this.id, "-continueButton"),
        onClick: this.props.onButtonClick
      }, beforeText, this.props.buttonText, afterText);
    }
  }]);

  return ProgressButton;
}(_react["default"].Component);

var _default = ProgressButton;
exports["default"] = _default;