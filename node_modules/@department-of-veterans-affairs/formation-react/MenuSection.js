"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _kebabCase2 = _interopRequireDefault(require("lodash/kebabCase"));

var _react = _interopRequireDefault(require("react"));

var _SubMenu = _interopRequireDefault(require("./SubMenu"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var MenuSection = /*#__PURE__*/function (_React$Component) {
  _inherits(MenuSection, _React$Component);

  function MenuSection() {
    var _this;

    _classCallCheck(this, MenuSection);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(MenuSection).call(this));
    _this.state = {
      title: {}
    };
    return _this;
  }

  _createClass(MenuSection, [{
    key: "getCurrentSection",
    value: function getCurrentSection() {
      return this.props.currentSection ? this.props.currentSection : this.props.defaultSection;
    }
  }, {
    key: "getId",
    value: function getId(title) {
      return "vetnav-".concat((0, _kebabCase2["default"])(title), "-ms");
    }
  }, {
    key: "updateCurrentSection",
    value: function updateCurrentSection() {
      if (this.props.mobileMediaQuery.matches) {
        this.setState({
          title: {
            hidden: true
          }
        });
      }

      this.props.updateCurrentSection();
    }
  }, {
    key: "handleBackToMenu",
    value: function handleBackToMenu() {
      this.updateCurrentSection('');

      if (this.props.mobileMediaQuery.matches) {
        this.setState({
          title: {}
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var show = this.getCurrentSection(this.props) === this.props.title;
      var isPlainLink = !!this.props.href;
      var button = null;
      var submenu = null;

      if (isPlainLink) {
        button = _react["default"].createElement("a", {
          href: this.props.href,
          onClick: this.props.linkClicked,
          className: "vetnav-level2"
        }, this.props.title);
      } else {
        button = _react["default"].createElement("button", _extends({}, this.state.title, {
          className: "vetnav-level2",
          "aria-controls": show ? this.getId(this.props.title) : null,
          "aria-expanded": show,
          onClick: function onClick() {
            return _this2.updateCurrentSection();
          }
        }), this.props.title);
        submenu = _react["default"].createElement(_SubMenu["default"], {
          id: this.getId(this.props.title),
          data: this.props.links,
          navTitle: this.props.title,
          show: show,
          handleBackToMenu: function handleBackToMenu() {
            return _this2.handleBackToMenu();
          },
          linkClicked: this.props.linkClicked,
          mobileMediaQuery: this.props.mobileMediaQuery,
          smallDesktopMediaQuery: this.props.smallDesktopMediaQuery,
          columnThreeLinkClicked: this.props.columnThreeLinkClicked
        });
      }

      return _react["default"].createElement("li", {
        className: "mm-link-container".concat(this.state.title.hidden ? '-small' : '')
      }, button, submenu);
    }
  }]);

  return MenuSection;
}(_react["default"].Component);

var _default = MenuSection;
exports["default"] = _default;