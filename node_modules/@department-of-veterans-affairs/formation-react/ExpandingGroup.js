"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = ExpandingGroup;

var _react = _interopRequireDefault(require("react"));

var _CSSTransitionGroup = _interopRequireDefault(require("react-transition-group/CSSTransitionGroup"));

var _classnames = _interopRequireDefault(require("classnames"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

/*
 * Component that expands to show a hidden child element with a fade in/slide down animation
 *
 * Props:
 * children - expects 2 children, the first is always shown, the second is shown if open is true
 * open - determines if the second child is displayed
 * additionalClass - A string added as a class to the parent element of the second child
 * showPlus - Boolean to display a "+" or "-" icon based on open status
 */
function ExpandingGroup(_ref) {
  var children = _ref.children,
      open = _ref.open,
      showPlus = _ref.showPlus,
      additionalClass = _ref.additionalClass,
      expandedContentId = _ref.expandedContentId;
  var classNames = (0, _classnames["default"])('form-expanding-group', {
    'form-expanding-group-open': open
  }, {
    'form-expanding-group-plus': showPlus
  });
  return _react["default"].createElement("div", {
    className: classNames
  }, children[0], _react["default"].createElement(_CSSTransitionGroup["default"], {
    id: expandedContentId,
    transitionName: "form-expanding-group-inner",
    transitionEnterTimeout: 700,
    transitionLeave: false
  }, open ? _react["default"].createElement("div", {
    key: "removable-group",
    className: additionalClass
  }, children[1]) : null));
}