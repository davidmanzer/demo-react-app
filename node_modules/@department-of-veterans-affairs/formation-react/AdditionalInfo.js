"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _uniqueId2 = _interopRequireDefault(require("lodash/uniqueId"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _ExpandingGroup = _interopRequireDefault(require("./ExpandingGroup"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var AdditionalInfo = /*#__PURE__*/function (_React$Component) {
  _inherits(AdditionalInfo, _React$Component);

  function AdditionalInfo(props) {
    var _this;

    _classCallCheck(this, AdditionalInfo);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(AdditionalInfo).call(this, props));

    _defineProperty(_assertThisInitialized(_this), "toggle", function () {
      _this.setState({
        open: !_this.state.open
      });

      return _this.props.onClick && _this.props.onClick();
    });

    _this.expandedContentId = (0, _uniqueId2["default"])('tooltip-');
    _this.state = {
      open: false
    };
    return _this;
  }

  _createClass(AdditionalInfo, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          triggerText = _this$props.triggerText,
          children = _this$props.children; // Display button as a block element in order to
      // preserve the Safari VoiceOver navigation order
      // when expanding the content.

      var buttonClass = (0, _classnames["default"])('additional-info-button', 'va-button-link', 'vads-u-display--block');
      var iconClass = (0, _classnames["default"])({
        fas: true,
        'fa-angle-down': true,
        open: this.state.open
      });
      var _this$props$tagName = this.props.tagName,
          TagName = _this$props$tagName === void 0 ? 'span' : _this$props$tagName;

      var trigger = _react["default"].createElement("button", {
        type: "button",
        className: buttonClass,
        "aria-expanded": this.state.open ? 'true' : 'false',
        "aria-controls": this.expandedContentId,
        onClick: this.toggle
      }, _react["default"].createElement(TagName, {
        className: "additional-info-title"
      }, triggerText, _react["default"].createElement("i", {
        className: iconClass
      })));

      return _react["default"].createElement(_ExpandingGroup["default"], {
        open: this.state.open,
        expandedContentId: this.expandedContentId
      }, trigger, _react["default"].createElement("div", {
        className: "additional-info-content"
      }, children));
    }
  }]);

  return AdditionalInfo;
}(_react["default"].Component);

exports["default"] = AdditionalInfo;