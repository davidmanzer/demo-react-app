"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _uniqueId2 = _interopRequireDefault(require("lodash/uniqueId"));

var _isUndefined2 = _interopRequireDefault(require("lodash/isUndefined"));

var _react = _interopRequireDefault(require("react"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var ErrorableCheckbox = /*#__PURE__*/function (_React$Component) {
  _inherits(ErrorableCheckbox, _React$Component);

  function ErrorableCheckbox() {
    var _this;

    _classCallCheck(this, ErrorableCheckbox);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(ErrorableCheckbox).call(this));
    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));
    return _this;
  }

  _createClass(ErrorableCheckbox, [{
    key: "UNSAFE_componentWillMount",
    value: function UNSAFE_componentWillMount() {
      this.inputId = (0, _uniqueId2["default"])('errorable-checkbox-');
    }
  }, {
    key: "handleChange",
    value: function handleChange(domEvent) {
      this.props.onValueChange(domEvent.target.checked);
    }
  }, {
    key: "render",
    value: function render() {
      // TODO: extract error logic into a utility function
      // Calculate error state.
      var errorSpan = '';
      var errorSpanId = undefined;

      if (this.props.errorMessage) {
        errorSpanId = "".concat(this.inputId, "-error-message");
        errorSpan = _react["default"].createElement("span", {
          className: "usa-input-error-message",
          role: "alert",
          id: errorSpanId
        }, _react["default"].createElement("span", {
          className: "sr-only"
        }, "Error"), " ", this.props.errorMessage);
      } // Calculate required.


      var requiredSpan = undefined;

      if (this.props.required) {
        requiredSpan = _react["default"].createElement("span", {
          className: "form-required-span"
        }, "(*Required)");
      }

      var className = "form-checkbox".concat(this.props.errorMessage ? ' usa-input-error' : '');

      if (!(0, _isUndefined2["default"])(this.props.className)) {
        className = "".concat(className, " ").concat(this.props.className);
      }

      return _react["default"].createElement("div", {
        className: className
      }, this.props.labelAboveCheckbox && _react["default"].createElement("span", {
        className: "label-above-checkbox"
      }, this.props.labelAboveCheckbox), _react["default"].createElement("input", {
        "aria-labelledby": this.props.ariaLabelledBy,
        "aria-describedby": errorSpanId,
        checked: this.props.checked,
        id: this.inputId,
        name: this.props.name,
        type: "checkbox",
        onChange: this.handleChange
      }), _react["default"].createElement("label", {
        className: this.props.errorMessage ? 'usa-input-error-label' : undefined,
        name: "".concat(this.props.name, "-label"),
        htmlFor: this.inputId
      }, this.props.label, requiredSpan), errorSpan);
    }
  }]);

  return ErrorableCheckbox;
}(_react["default"].Component);

var _default = ErrorableCheckbox;
exports["default"] = _default;